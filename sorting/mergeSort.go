package sorting

import "fmt"

/*
üìù Merge Sort (–°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ —Å–ª–∏—è–Ω–∏–µ–º)
Merge Sort (—Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ —Å–ª–∏—è–Ω–∏–µ–º) ‚Äî —ç—Ç–æ —Ä–µ–∫—É—Ä—Å–∏–≤–Ω—ã–π –∞–ª–≥–æ—Ä–∏—Ç–º, –∫–æ—Ç–æ—Ä—ã–π –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –ø—Ä–∏–Ω—Ü–∏–ø —Ä–∞–∑–¥–µ–ª—è–π –∏ –≤–ª–∞—Å—Ç–≤—É–π.

üîç –ö–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –∞–ª–≥–æ—Ä–∏—Ç–º?
1Ô∏è‚É£ –†–∞–∑–¥–µ–ª–µ–Ω–∏–µ:
–†–∞–∑–¥–µ–ª—è–µ–º –º–∞—Å—Å–∏–≤ –ø–æ–ø–æ–ª–∞–º –¥–æ —Ç–µ—Ö –ø–æ—Ä, –ø–æ–∫–∞ –Ω–µ –æ—Å—Ç–∞–Ω—É—Ç—Å—è –æ—Ç–¥–µ–ª—å–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã (—Ä–∞–∑–º–µ—Ä–æ–º 1).
2Ô∏è‚É£ –°–ª–∏—è–Ω–∏–µ:
–ù–∞—á–∏–Ω–∞–µ–º –æ–±—Ä–∞—Ç–Ω–æ –æ–±—ä–µ–¥–∏–Ω—è—Ç—å –ø–æ–¥–º–∞—Å—Å–∏–≤—ã, —Å–æ—Ä—Ç–∏—Ä—É—è –∏—Ö –ø–æ —Ö–æ–¥—É —Å–ª–∏—è–Ω–∏—è.
3Ô∏è‚É£ –†–µ–∑—É–ª—å—Ç–∞—Ç:
–í –∫–æ–Ω—Ü–µ –æ–±—ä–µ–¥–∏–Ω—è–µ–º –≤—Å–µ —á–∞—Å—Ç–∏ –≤ –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –º–∞—Å—Å–∏–≤.
üìå –ü—Ä–∏–º–µ—Ä —Ä–∞–±–æ—Ç—ã Merge Sort
arr := []int{5, 3, 8, 4, 2}
–®–∞–≥ 1: –†–∞–∑–¥–µ–ª–µ–Ω–∏–µ
[5, 3, 8, 4, 2]
     ‚Üì –†–∞–∑–¥–µ–ª—è–µ–º
[5, 3]    [8, 4, 2]
 ‚Üì  ‚Üì      ‚Üì  –†–∞–∑–¥–µ–ª—è–µ–º
[5] [3]   [8] [4, 2]
               ‚Üì
             [4] [2]
–®–∞–≥ 2: –°–ª–∏—è–Ω–∏–µ (–∏ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞)

[5] [3] ‚Üí [3, 5]
[4] [2] ‚Üí [2, 4]
[2, 4] [8] ‚Üí [2, 4, 8]
–®–∞–≥ 3: –§–∏–Ω–∞–ª—å–Ω–æ–µ —Å–ª–∏—è–Ω–∏–µ

[3, 5]  [2, 4, 8] ‚Üí [2, 3, 4, 5, 8]
‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç: [2, 3, 4, 5, 8]

*/

func merge(left, right []int) []int {
	result := []int{}
	i, j := 0, 0

	for i < len(left) && j < len(right) {
		if left[i] < right[j] {
			result = append(result, left[i])
			i++
		} else {
			result = append(result, right[j])
			j++
		}
	}

	// –î–æ–±–∞–≤–ª—è–µ–º –æ—Å—Ç–∞–≤—à–∏–µ—Å—è —ç–ª–µ–º–µ–Ω—Ç—ã
	result = append(result, left[i:]...)

	result = append(result, right[j:]...)
	fmt.Println(result)

	return result
}

// –†–µ–∫—É—Ä—Å–∏–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏
func MergeSort(arr []int) []int { // arr = []int{5, 3, 8, 4, 2}
	if len(arr) <= 1 {
		return arr
	}

	mid := len(arr) / 2
	left := MergeSort(arr[:mid])
	right := MergeSort(arr[mid:])

	return merge(left, right)
}
